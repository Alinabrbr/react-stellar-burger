{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { getCard } from \"../utils/Api\";\nimport { getCards } from \"./actions/card\";\nconst initialState = {\n  cardsArray: [],\n  isLoading: false,\n  error: ''\n};\nexport const takeCards = createAsyncThunk('cardsGet', async () => {\n  const res = await getCard();\n  return res;\n});\nconsole.log(getCards());\nconst cardsSlice = createSlice({\n  name: 'cards',\n  initialState,\n  // reducers: {\n  //     cardsUploading: (state, action) => {\n  //         state.isLoading = true;\n  //         state.error = '';\n  //     },\n  //     cardsLoadError: (state, action) => {\n  //         state.error = action.payload;\n  //         state.isLoading = false;\n  //     },\n  //     cardsLoaded: (state, action) => {\n  //         state.cardsArray = action.payload;\n  //         state.isLoading = false;\n  //     }\n  // },\n  extraReducers: builder => {\n    builder.addCase(getCards.pending.type, (state, action) => {\n      state.isLoading = true;\n      state.error = '';\n    }).addCase(getCards.fulfilled.type, (state, action) => {\n      state.cardsArray = action.payload;\n      state.isLoading = false;\n    }).addCase(getCards.rejected.type, (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    });\n  }\n});\nexport default cardsSlice.reducer;\nexport const {\n  cardsLoaded,\n  cardsUploading,\n  cardsLoadError\n} = cardsSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","getCard","getCards","initialState","cardsArray","isLoading","error","takeCards","res","console","log","cardsSlice","name","extraReducers","builder","addCase","pending","type","state","action","fulfilled","payload","rejected","reducer","cardsLoaded","cardsUploading","cardsLoadError","actions"],"sources":["/Users/alina/practicum/stellar-burgers/src/services/cardsSlice.js"],"sourcesContent":["import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\nimport {getCard} from \"../utils/Api\";\nimport {getCards} from \"./actions/card\";\n\nconst initialState = {\n    cardsArray: [],\n    isLoading: false,\n    error: ''\n};\n\nexport const takeCards = createAsyncThunk(\n    'cardsGet',\n    async () => {\n        const res = await getCard();\n        return res;\n    }\n)\n\nconsole.log(getCards())\n\nconst cardsSlice = createSlice({\n    name: 'cards',\n    initialState,\n    // reducers: {\n    //     cardsUploading: (state, action) => {\n    //         state.isLoading = true;\n    //         state.error = '';\n    //     },\n    //     cardsLoadError: (state, action) => {\n    //         state.error = action.payload;\n    //         state.isLoading = false;\n    //     },\n    //     cardsLoaded: (state, action) => {\n    //         state.cardsArray = action.payload;\n    //         state.isLoading = false;\n    //     }\n    // },\n    extraReducers: builder => {\n        builder\n            .addCase(getCards.pending.type, (state, action) => {\n                state.isLoading = true;\n                state.error = '';\n            })\n            .addCase(getCards.fulfilled.type, (state, action) => {\n                state.cardsArray = action.payload;\n                state.isLoading = false;\n            })\n            .addCase(getCards.rejected.type, (state, action) => {\n                state.error = action.payload;\n                state.isLoading = false;\n            })\n    }\n})\n\nexport default cardsSlice.reducer;\nexport const {cardsLoaded, cardsUploading, cardsLoadError} = cardsSlice.actions;"],"mappings":"AAAA,SAAQA,gBAAgB,EAAEC,WAAW,QAAO,kBAAkB;AAC9D,SAAQC,OAAO,QAAO,cAAc;AACpC,SAAQC,QAAQ,QAAO,gBAAgB;AAEvC,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGR,gBAAgB,CACrC,UAAU,EACV,YAAY;EACR,MAAMS,GAAG,GAAG,MAAMP,OAAO,EAAE;EAC3B,OAAOO,GAAG;AACd,CAAC,CACJ;AAEDC,OAAO,CAACC,GAAG,CAACR,QAAQ,EAAE,CAAC;AAEvB,MAAMS,UAAU,GAAGX,WAAW,CAAC;EAC3BY,IAAI,EAAE,OAAO;EACbT,YAAY;EACZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAU,aAAa,EAAEC,OAAO,IAAI;IACtBA,OAAO,CACFC,OAAO,CAACb,QAAQ,CAACc,OAAO,CAACC,IAAI,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACb,SAAS,GAAG,IAAI;MACtBa,KAAK,CAACZ,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC,CACDS,OAAO,CAACb,QAAQ,CAACkB,SAAS,CAACH,IAAI,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACd,UAAU,GAAGe,MAAM,CAACE,OAAO;MACjCH,KAAK,CAACb,SAAS,GAAG,KAAK;IAC3B,CAAC,CAAC,CACDU,OAAO,CAACb,QAAQ,CAACoB,QAAQ,CAACL,IAAI,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACZ,KAAK,GAAGa,MAAM,CAACE,OAAO;MAC5BH,KAAK,CAACb,SAAS,GAAG,KAAK;IAC3B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeM,UAAU,CAACY,OAAO;AACjC,OAAO,MAAM;EAACC,WAAW;EAAEC,cAAc;EAAEC;AAAc,CAAC,GAAGf,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}