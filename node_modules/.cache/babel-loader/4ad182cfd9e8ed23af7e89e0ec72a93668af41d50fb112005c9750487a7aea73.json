{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { postOrderRequest } from \"../utils/Api\";\nconst initialState = {\n  order: null,\n  loading: true,\n  error: null\n};\nexport const postOrderResult = createAsyncThunk(`orderDetails/postOrderResult`, async ingredients => {\n  return await postOrderRequest(ingredients).then(data => data.data);\n});\nexport const orderDetailsSlice = createSlice({\n  name: 'orderDetails',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(postOrderResult.pending, (state, action) => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(postOrderResult.fulfilled, (state, action) => {\n      console.log(action.payload);\n      state.loading = false;\n      state.order = action.payload;\n      state.error = null;\n    }).addCase(postOrderResult.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n      state.order = null;\n    });\n  }\n});\nexport default orderDetailsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","postOrderRequest","initialState","order","loading","error","postOrderResult","ingredients","then","data","orderDetailsSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","console","log","payload","rejected","message","reducer"],"sources":["/Users/alina/practicum/stellar-burgers/src/services/orderDetailsSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport {postOrderRequest} from \"../utils/Api\";\n\nconst initialState = {\n    order: null,\n    loading: true,\n    error: null\n};\n\nexport const postOrderResult = createAsyncThunk(\n    `orderDetails/postOrderResult`,\n    async (ingredients) => {\n        return await postOrderRequest(ingredients).then((data) => data.data);\n    }\n);\n\nexport const orderDetailsSlice = createSlice({\n    name: 'orderDetails',\n    initialState,\n    reducers: {},\n    extraReducers: builder => {\n        builder\n            .addCase(postOrderResult.pending, (state, action) => {\n                state.loading = true;\n                state.error = null;\n            })\n\n            .addCase(postOrderResult.fulfilled, (state, action) => {\n                console.log(action.payload);\n                state.loading = false;\n                state.order = action.payload;\n                state.error = null;\n            })\n\n            .addCase(postOrderResult.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.error.message;\n                state.order = null;\n            });\n    }\n});\n\nexport default orderDetailsSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAC/D,SAAQC,gBAAgB,QAAO,cAAc;AAE7C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGN,gBAAgB,CAC1C,8BAA6B,EAC9B,MAAOO,WAAW,IAAK;EACnB,OAAO,MAAMN,gBAAgB,CAACM,WAAW,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACA,IAAI,CAAC;AACxE,CAAC,CACJ;AAED,OAAO,MAAMC,iBAAiB,GAAGX,WAAW,CAAC;EACzCY,IAAI,EAAE,cAAc;EACpBT,YAAY;EACZU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IAAI;IACtBA,OAAO,CACFC,OAAO,CAACT,eAAe,CAACU,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACb,OAAO,GAAG,IAAI;MACpBa,KAAK,CAACZ,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CAEDU,OAAO,CAACT,eAAe,CAACa,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACnDE,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,OAAO,CAAC;MAC3BL,KAAK,CAACb,OAAO,GAAG,KAAK;MACrBa,KAAK,CAACd,KAAK,GAAGe,MAAM,CAACI,OAAO;MAC5BL,KAAK,CAACZ,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CAEDU,OAAO,CAACT,eAAe,CAACiB,QAAQ,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACb,OAAO,GAAG,KAAK;MACrBa,KAAK,CAACZ,KAAK,GAAGa,MAAM,CAACb,KAAK,CAACmB,OAAO;MAClCP,KAAK,CAACd,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeO,iBAAiB,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}