{"ast":null,"code":"var _jsxFileName = \"/Users/alina/practicum/stellar-burgers/src/components/Card/Card.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Price from \"../Price/Price\";\nimport styles from \"../Card/Card.module.css\";\nimport clsx from \"clsx\";\nimport { Counter } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport PropTypes from 'prop-types';\nimport Modal from \"../Modal/Modal\";\nimport IngredientDetails from \"../Ingredient-details/Ingredient-details\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getModalInfoSelector } from \"../../services/getModalInfoSelector\";\nimport { closePopup, openPopup } from \"../../services/ingredientsInfoSlice\";\nimport { useDrag } from \"react-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  _s();\n  let {\n    card,\n    priceSize\n  } = _ref;\n  const modalState = useSelector(getModalInfoSelector);\n  const dispatch = useDispatch();\n  const openModal = () => {\n    dispatch(openPopup(card));\n  };\n  const closeModal = () => {\n    dispatch(closePopup());\n  };\n  const [, dragRef] = useDrag({\n    type: \"ingredients\",\n    item: {\n      card\n    }\n  });\n  s;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: openModal,\n      className: clsx(styles.card),\n      ref: dragRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.counter,\n        children: /*#__PURE__*/_jsxDEV(Counter, {\n          count: 1,\n          size: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"mr-4 ml-4\",\n        src: card.image,\n        alt: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Price, {\n        price: card.price,\n        priceSize: priceSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text_type_main-default\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), modalState.isModalOpen && modalState.content._id === card._id && /*#__PURE__*/_jsxDEV(Modal, {\n      closeModal: closeModal,\n      children: /*#__PURE__*/_jsxDEV(IngredientDetails, {\n        card: modalState.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 110\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 79\n    }, this)]\n  }, void 0, true);\n}\n_s(Card, \"n6YwaZhBGWprKkeglZgXEm/x9gc=\", false, function () {\n  return [useSelector, useDispatch, useDrag];\n});\n_c = Card;\nCard.propTypes = {\n  name: PropTypes.string,\n  image: PropTypes.string,\n  price: PropTypes.number\n};\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Price","styles","clsx","Counter","PropTypes","Modal","IngredientDetails","useDispatch","useSelector","getModalInfoSelector","closePopup","openPopup","useDrag","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","_ref","_s","card","priceSize","modalState","dispatch","openModal","closeModal","dragRef","type","item","s","children","onClick","className","ref","counter","count","size","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","name","price","isModalOpen","content","_id","_c","propTypes","string","number","$RefreshReg$"],"sources":["/Users/alina/practicum/stellar-burgers/src/components/Card/Card.jsx"],"sourcesContent":["import React from \"react\";\nimport Price from \"../Price/Price\";\nimport styles from \"../Card/Card.module.css\";\nimport clsx from \"clsx\";\nimport {Counter} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport PropTypes from 'prop-types';\nimport Modal from \"../Modal/Modal\";\nimport IngredientDetails from \"../Ingredient-details/Ingredient-details\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getModalInfoSelector} from \"../../services/getModalInfoSelector\";\nimport {closePopup, openPopup} from \"../../services/ingredientsInfoSlice\";\nimport {useDrag} from \"react-dnd\";\n\nexport default function Card({card, priceSize}) {\n\n    const modalState = useSelector(getModalInfoSelector)\n    const dispatch = useDispatch();\n\n    const openModal = () => {\n        dispatch(openPopup(card))\n    };\n\n    const closeModal = () => {\n        dispatch(closePopup())\n    };\n\n    const [, dragRef] = useDrag({\n        type: \"ingredients\",\n        item: {card}\n    });s\n    return (\n        <>\n            <li onClick={openModal} className={clsx(styles.card)} ref={dragRef}>\n                <div className={styles.counter}>\n                    <Counter count={1} size=\"default\"/>\n                </div>\n                <img className='mr-4 ml-4' src={card.image} alt={card.name}/>\n                <Price price={card.price} priceSize={priceSize}></Price>\n                <p className='text_type_main-default'>{card.name}</p>\n            </li>\n            {modalState.isModalOpen && modalState.content._id === card._id && <Modal closeModal={closeModal}><IngredientDetails card={modalState.content}/></Modal>}\n        </>\n    )\n}\n\nCard.propTypes = {\n    name: PropTypes.string,\n    image: PropTypes.string,\n    price: PropTypes.number\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}