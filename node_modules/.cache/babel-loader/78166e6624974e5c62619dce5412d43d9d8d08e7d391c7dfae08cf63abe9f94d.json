{"ast":null,"code":"var _jsxFileName = \"/Users/alina/practicum/stellar-burgers/src/components/Modal/Modal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"../Modal/Modal.module.css\";\nimport clsx from \"clsx\";\nimport { createPortal } from \"react-dom\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ModalOverlay from \"../Modal-overlay/Modal-overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Modal(props) {\n  _s();\n  const modalElement = document.getElementById('modal');\n  const [modalIsOpen, setModalIsOpen] = useState(true);\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n      type: \"primary\",\n      onClick: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(styles.modal, 'pt-10 pr-10 pl-10 pb-15'),\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true), modalElement);\n}\n_s(Modal, \"ZgVrBg3ryxnygUarmoT4hn0caVc=\");\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","styles","clsx","createPortal","CloseIcon","ModalOverlay","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","props","_s","modalElement","document","getElementById","modalIsOpen","setModalIsOpen","closeModal","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","modal","_c","$RefreshReg$"],"sources":["/Users/alina/practicum/stellar-burgers/src/components/Modal/Modal.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport styles from \"../Modal/Modal.module.css\";\nimport clsx from \"clsx\";\nimport {createPortal} from \"react-dom\";\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ModalOverlay from \"../Modal-overlay/Modal-overlay\";\n\n\n\nexport default function Modal (props){\n\n    const modalElement = document.getElementById('modal');\n\n    const [modalIsOpen, setModalIsOpen] = useState(true);\n\n    const closeModal = () => {\n    setModalIsOpen(false);\n}\n\n    return createPortal(\n        (\n            <>\n\n                    <CloseIcon type=\"primary\" onClick={closeModal}/>\n                <div className={clsx(styles.modal, 'pt-10 pr-10 pl-10 pb-15')}>\n                    {props.children}\n                </div>\n                <ModalOverlay/>\n            </>\n        ), modalElement\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,IAAI,MAAM,MAAM;AACvB,SAAQC,YAAY,QAAO,WAAW;AACtC,SAAQC,SAAS,QAAO,oDAAoD;AAC5E,OAAOC,YAAY,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAI1D,eAAe,SAASC,KAAKA,CAAEC,KAAK,EAAC;EAAAC,EAAA;EAEjC,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;EAErD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMkB,UAAU,GAAGA,CAAA,KAAM;IACzBD,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAEG,oBAAOd,YAAY,eAEXI,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBAEQZ,OAAA,CAACH,SAAS;MAACgB,IAAI,EAAC,SAAS;MAACC,OAAO,EAAEH;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACpDlB,OAAA;MAAKmB,SAAS,EAAExB,IAAI,CAACD,MAAM,CAAC0B,KAAK,EAAE,yBAAyB,CAAE;MAAAR,QAAA,EACzDR,KAAK,CAACQ;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACb,eACNlB,OAAA,CAACF,YAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBAChB,EACJZ,YAAY,CAClB;AACL;AAACD,EAAA,CAtBuBF,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}