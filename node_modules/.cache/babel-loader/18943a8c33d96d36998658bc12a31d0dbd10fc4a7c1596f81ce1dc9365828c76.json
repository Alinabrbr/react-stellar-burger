{"ast":null,"code":"import { ADDCARDS } from \"../actions/card\";\nconst initialState = {\n  cardsArray: []\n};\nexport const CardReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADDCARDS:\n      {\n        return {\n          ...state,\n          cardsArray: action.payload\n        };\n      }\n    default:\n      return state;\n  }\n};\n_c = CardReducer;\nvar _c;\n$RefreshReg$(_c, \"CardReducer\");","map":{"version":3,"names":["ADDCARDS","initialState","cardsArray","CardReducer","state","arguments","length","undefined","action","type","payload","_c","$RefreshReg$"],"sources":["/Users/alina/practicum/stellar-burgers/src/services/reducers/card.js"],"sourcesContent":["import {ADDCARDS} from \"../actions/card\";\n\nconst initialState = {\n    cardsArray: []\n};\n\nexport const CardReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADDCARDS: {\n            return {...state, cardsArray: action.payload}\n        }\n        default :\n            return state;\n    }\n}"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,iBAAiB;AAExC,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKT,QAAQ;MAAE;QACX,OAAO;UAAC,GAAGI,KAAK;UAAEF,UAAU,EAAEM,MAAM,CAACE;QAAO,CAAC;MACjD;IACA;MACI,OAAON,KAAK;EAAC;AAEzB,CAAC;AAAAO,EAAA,GARYR,WAAW;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}