{"ast":null,"code":"var _jsxFileName = \"/Users/alina/practicum/stellar-burgers/src/components/SectionBurgerConstructor/SectionBurgerConstructor.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport BurgerConstructor from \"../Burger-constructor/Burger-Constructor\";\nimport clsx from \"clsx\";\nimport styles from \"../SectionBurgerConstructor/SectionBurgerConstructor.module.css\";\nimport Price from \"../Price/Price\";\nimport { Button, ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Modal from \"../Modal/Modal\";\nimport OrderDetails from \"../Order-details/Order-details\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closePopup, openPopup } from \"../../services/orderSlice\";\nimport { getModalOrderSelector } from \"../../services/getModalOrderSelector\";\nimport { addIngredient, removeIngredient } from \"../../services/constructorSlice\";\nimport { useDrop } from \"react-dnd\";\nimport { constructorSelector } from \"../../services/constructorSelector\";\nimport { totalPriceSelector } from \"../../services/totalPriceSelector\";\nimport { fetchOrderResult } from \"../../services/orderDetailsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SectionBurgerConstructor() {\n  _s();\n  const cards = useSelector(constructorSelector);\n  const totalPrice = useSelector(totalPriceSelector);\n  const bun = cards.find(card => card.type === 'bun');\n  const modalOrderState = useSelector(getModalOrderSelector);\n  const dispatch = useDispatch();\n  const openModal = () => {\n    dispatch(openPopup());\n  };\n  const closeModal = () => {\n    dispatch(closePopup());\n  };\n  const [, dropRef] = useDrop({\n    accept: \"ingredient\",\n    drop(card) {\n      dispatch(addIngredient(card));\n    }\n  });\n  const deleteIngredient = card => {\n    dispatch(removeIngredient(card));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: clsx(styles.burgerConstructor, 'mt-25'),\n      ref: dropRef,\n      onDragOver: evt => evt.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(styles.burgerIngredientsContainer, 'pl-8'),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-4 ml-4\",\n          children: bun && /*#__PURE__*/_jsxDEV(ConstructorElement, {\n            text: `${bun.name} (верх)`,\n            isLocked: \"isLocked\",\n            type: \"top\",\n            thumbnail: bun.image,\n            price: bun.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(styles.burgerIngredientsContainerScroll, 'mb-4'),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-4\",\n          children: cards.map((card, index) => (card.type === \"main\" || card.type === 'sauce') && /*#__PURE__*/_jsxDEV(BurgerConstructor, {\n            card: card,\n            index: index,\n            handleClose: () => deleteIngredient(card)\n          }, card.ingredientId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 79\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(styles.burgerIngredientsContainer, 'pl-8'),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-4 ml-4\",\n          children: bun && /*#__PURE__*/_jsxDEV(ConstructorElement, {\n            text: `${bun.name} (низ)`,\n            isLocked: \"isLocked\",\n            type: \"bottom\",\n            thumbnail: bun.image,\n            price: bun.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(styles.priceContainer, 'mt-10'),\n        children: [/*#__PURE__*/_jsxDEV(Price, {\n          priceSize: \"medium\",\n          price: totalPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            openModal();\n            dispatch(fetchOrderResult({\n              ingredients: [...cards.map(ingredient => ingredient._id), bun._id]\n            }));\n          }\n          // disabled={cards.find((item) => item.type !== \"bun\" && cards.length === 0}\n          ,\n          htmlType: \"button\",\n          type: \"primary\",\n          size: \"large\",\n          children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), modalOrderState && /*#__PURE__*/_jsxDEV(Modal, {\n      closeModal: () => {\n        closeModal();\n        clearStoreBurgerConstructor();\n      },\n      children: /*#__PURE__*/_jsxDEV(OrderDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 105\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionBurgerConstructor, \"f1f9k2HAmtYFTrJTV6XAdvJnIK0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useDrop];\n});\n_c = SectionBurgerConstructor;\nvar _c;\n$RefreshReg$(_c, \"SectionBurgerConstructor\");","map":{"version":3,"names":["React","BurgerConstructor","clsx","styles","Price","Button","ConstructorElement","Modal","OrderDetails","useDispatch","useSelector","closePopup","openPopup","getModalOrderSelector","addIngredient","removeIngredient","useDrop","constructorSelector","totalPriceSelector","fetchOrderResult","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionBurgerConstructor","_s","cards","totalPrice","bun","find","card","type","modalOrderState","dispatch","openModal","closeModal","dropRef","accept","drop","deleteIngredient","children","className","burgerConstructor","ref","onDragOver","evt","preventDefault","burgerIngredientsContainer","text","name","isLocked","thumbnail","image","price","fileName","_jsxFileName","lineNumber","columnNumber","burgerIngredientsContainerScroll","map","index","handleClose","ingredientId","priceContainer","priceSize","onClick","ingredients","ingredient","_id","htmlType","size","clearStoreBurgerConstructor","_c","$RefreshReg$"],"sources":["/Users/alina/practicum/stellar-burgers/src/components/SectionBurgerConstructor/SectionBurgerConstructor.jsx"],"sourcesContent":["import React from \"react\";\nimport BurgerConstructor from \"../Burger-constructor/Burger-Constructor\";\nimport clsx from \"clsx\";\nimport styles from \"../SectionBurgerConstructor/SectionBurgerConstructor.module.css\";\nimport Price from \"../Price/Price\";\nimport {Button, ConstructorElement} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Modal from \"../Modal/Modal\";\nimport OrderDetails from \"../Order-details/Order-details\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {closePopup, openPopup} from \"../../services/orderSlice\";\nimport {getModalOrderSelector} from \"../../services/getModalOrderSelector\";\nimport {addIngredient, removeIngredient} from \"../../services/constructorSlice\";\nimport {useDrop} from \"react-dnd\";\nimport {constructorSelector} from \"../../services/constructorSelector\";\nimport {totalPriceSelector} from \"../../services/totalPriceSelector\";\nimport {fetchOrderResult} from \"../../services/orderDetailsSlice\";\n\nexport default function SectionBurgerConstructor() {\n\n    const cards = useSelector(constructorSelector);\n\n    const totalPrice = useSelector(totalPriceSelector);\n\n    const bun = cards.find(card => card.type === 'bun');\n\n    const modalOrderState = useSelector(getModalOrderSelector)\n    const dispatch = useDispatch();\n\n    const openModal = () => {\n        dispatch(openPopup())\n    };\n\n    const closeModal = () => {\n        dispatch(closePopup())\n    };\n\n    const [, dropRef] = useDrop({\n        accept: \"ingredient\",\n        drop(card) {\n            dispatch(addIngredient(card));\n        }\n    });\n\n    const deleteIngredient = (card) => {\n        dispatch(removeIngredient(card));\n    }\n\n    return (\n        <>\n            <section className={clsx(styles.burgerConstructor, 'mt-25')} ref={dropRef}\n                     onDragOver={(evt) => evt.preventDefault()}>\n                <div className={clsx(styles.burgerIngredientsContainer, 'pl-8')}>\n                    <div className='mr-4 ml-4'>\n                        {\n                            bun && (\n                                <ConstructorElement text={`${bun.name} (верх)`} isLocked='isLocked' type='top' thumbnail={bun.image} price={bun.price}/>\n                            )\n                        }\n                    </div>\n                </div>\n\n                <div className={clsx(styles.burgerIngredientsContainerScroll, 'mb-4')}>\n                    <div className='mr-4'>\n                        {cards.map((card, index) => (\n                            (card.type === \"main\" || card.type ==='sauce') && <BurgerConstructor card={card} index={index} key={card.ingredientId} handleClose={() => deleteIngredient(card)}/>\n                        ))}\n                    </div>\n                </div>\n\n                <div className={clsx(styles.burgerIngredientsContainer, 'pl-8')}>\n                    <div className='mr-4 ml-4'>\n                        {\n                            bun && (\n                                <ConstructorElement text={`${bun.name} (низ)`} isLocked='isLocked' type='bottom' thumbnail={bun.image} price={bun.price}/>\n                            )\n                        }\n                    </div>\n                </div>\n\n                <div className={clsx(styles.priceContainer, 'mt-10')}>\n                    <Price priceSize={\"medium\"} price={totalPrice}/>\n                    <Button onClick={() => {\n                        openModal();\n                        dispatch(fetchOrderResult({ingredients: [...cards.map((ingredient) => ingredient._id), bun._id]}));\n                    }}\n                        // disabled={cards.find((item) => item.type !== \"bun\" && cards.length === 0}\n                            htmlType=\"button\" type=\"primary\" size=\"large\">\n                        Оформить заказ\n                    </Button>\n                </div>\n            </section>\n\n            {modalOrderState && <Modal closeModal={() => {closeModal(); clearStoreBurgerConstructor()}}><OrderDetails/></Modal>}\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}