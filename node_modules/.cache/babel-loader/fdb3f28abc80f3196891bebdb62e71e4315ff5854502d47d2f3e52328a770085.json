{"ast":null,"code":"var _jsxFileName = \"/Users/alina/practicum/stellar-burgers/src/components/SectionBurgerConstructor/SectionBurgerConstructor.jsx\",\n  _s = $RefreshSig$();\nimport BurgerConstructor from \"../Burger-constructor/Burger-Constructor\";\nimport clsx from \"clsx\";\nimport styles from \"../SectionBurgerConstructor/SectionBurgerConstructor.module.css\";\nimport Price from \"../Price/Price\";\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Modal from \"../Modal/Modal\";\nimport OrderDetails from \"../Order-details/Order-details\";\nimport React from \"react\";\nimport useModal from \"../../hooks/useModal\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SectionBurgerConstructor(_ref) {\n  _s();\n  let {\n    cards\n  } = _ref;\n  const {\n    isModalState,\n    openModal,\n    closeModal\n  } = useModal();\n  const bun = cards.find(card => card.type === 'bun');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(styles.burgerIngredientsContainer, 'mb-4'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-4\",\n        children: cards.map(card => card.type === 'main' && /*#__PURE__*/_createElement(BurgerConstructor, {\n          ...card,\n          key: card._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 49\n          }\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), cards.map(card => card.type === 'bun' && /*#__PURE__*/_createElement(BurgerConstructor, {\n      ...card,\n      type: 'bottom',\n      isLocked: true,\n      key: card._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 40\n      }\n    })), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(styles.priceContainer, 'mt-10'),\n      children: [/*#__PURE__*/_jsxDEV(Price, {\n        priceSize: \"medium\",\n        price: 610\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: openModal,\n        htmlType: \"button\",\n        type: \"primary\",\n        size: \"large\",\n        children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), isModalState && /*#__PURE__*/_jsxDEV(Modal, {\n      closeModal: closeModal,\n      children: /*#__PURE__*/_jsxDEV(OrderDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionBurgerConstructor, \"BupQ71INzQ+vVTYrl14mSajslrE=\", false, function () {\n  return [useModal];\n});\n_c = SectionBurgerConstructor;\nvar _c;\n$RefreshReg$(_c, \"SectionBurgerConstructor\");","map":{"version":3,"names":["BurgerConstructor","clsx","styles","Price","Button","Modal","OrderDetails","React","useModal","createElement","_createElement","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionBurgerConstructor","_ref","_s","cards","isModalState","openModal","closeModal","bun","find","card","type","children","className","burgerIngredientsContainer","map","key","_id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","isLocked","priceContainer","priceSize","price","onClick","htmlType","size","_c","$RefreshReg$"],"sources":["/Users/alina/practicum/stellar-burgers/src/components/SectionBurgerConstructor/SectionBurgerConstructor.jsx"],"sourcesContent":["import BurgerConstructor from \"../Burger-constructor/Burger-Constructor\";\nimport clsx from \"clsx\";\nimport styles from \"../SectionBurgerConstructor/SectionBurgerConstructor.module.css\";\nimport Price from \"../Price/Price\";\nimport {Button} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Modal from \"../Modal/Modal\";\nimport OrderDetails from \"../Order-details/Order-details\";\nimport React from \"react\";\nimport useModal from \"../../hooks/useModal\";\n\nexport default function SectionBurgerConstructor ({cards}){\n\n    const {isModalState, openModal, closeModal} = useModal();\n    const bun = cards.find(card => (card.type === 'bun'))\n\n    return (\n        <>\n\n            <div className={clsx(styles.burgerIngredientsContainer, 'mb-4')}>\n                <div className='mr-4'>\n                    {cards.map((card) => (\n                        card.type === 'main' && <BurgerConstructor {...card} key={card._id}/>\n                    ))}\n                </div>\n            </div>\n\n            {cards.map((card) => (\n                card.type === 'bun' && <BurgerConstructor {...card} type={'bottom'} isLocked={true}  key={card._id}/>\n            ))}\n\n            <div className={clsx(styles.priceContainer, 'mt-10')}>\n                <Price priceSize={\"medium\"} price={610}/>\n                <Button onClick={openModal} htmlType=\"button\" type=\"primary\" size=\"large\">Оформить заказ</Button>\n            </div>\n\n            {isModalState && <Modal closeModal={closeModal}><OrderDetails/></Modal>}\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}