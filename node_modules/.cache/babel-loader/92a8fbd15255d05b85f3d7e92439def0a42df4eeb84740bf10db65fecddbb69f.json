{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from 'uuid';\nconst initialState = {\n  constructorIngredient: [],\n  totalPrice: 0\n};\nconst constructorSlice = createSlice({\n  name: 'ingredient',\n  initialState,\n  reducers: {\n    addIngredient: {\n      reducer: (state, action) => {\n        if (action.payload.type === 'bun' && state.constructorIngredient.map(ingredient => ingredient.type === \"bun\")) {\n          state.constructorIngredient = state.constructorIngredient.filter(ingredient => ingredient.type !== 'bun');\n        }\n        state.constructorIngredient.push(action.payload);\n        state.totalPrice += action.payload.price;\n      },\n      prepare: payload => {\n        return {\n          payload: {\n            ...payload,\n            ingredientId: uuidv4()\n          }\n        };\n      }\n    },\n    removeIngredient: (state, action) => {\n      state.constructorIngredient = state.constructorIngredient.filter(ingredient => ingredient.ingredientId !== action.payload);\n      state.totalPrice -= action.payload.price;\n    },\n    sortIngredients: (state, action) => {\n      const {\n        indexFrom,\n        indexTo,\n        ingredient\n      } = action.payload;\n      state.constructorIngredient.splice(indexFrom, 1);\n      state.constructorIngredient.splice(indexTo, 0, ingredient);\n    }\n  }\n});\nexport default constructorSlice.reducer;\nexport const {\n  addIngredient,\n  removeIngredient,\n  sortIngredients\n} = constructorSlice.actions;","map":{"version":3,"names":["createSlice","v4","uuidv4","initialState","constructorIngredient","totalPrice","constructorSlice","name","reducers","addIngredient","reducer","state","action","payload","type","map","ingredient","filter","push","price","prepare","ingredientId","removeIngredient","sortIngredients","indexFrom","indexTo","splice","actions"],"sources":["/Users/alina/practicum/stellar-burgers/src/services/constructorSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport {v4 as uuidv4} from 'uuid';\n\nconst initialState = {\n    constructorIngredient: [],\n    totalPrice: 0,\n};\n\nconst constructorSlice = createSlice({\n    name: 'ingredient',\n    initialState,\n    reducers: {\n        addIngredient: {\n            reducer: (state, action) => {\n                if (action.payload.type === 'bun' && state.constructorIngredient.map((ingredient) => ingredient.type === \"bun\")) {\n                    state.constructorIngredient = state.constructorIngredient.filter((ingredient) => ingredient.type !== 'bun')\n                }\n                state.constructorIngredient.push(action.payload);\n                state.totalPrice += action.payload.price;\n            },\n            prepare: (payload) => {\n                return {\n                    payload: {\n                        ...payload,\n                        ingredientId: uuidv4()\n                    },\n                };\n            },\n        },\n        removeIngredient: (state, action) => {\n            state.constructorIngredient = state.constructorIngredient.filter((ingredient) => ingredient.ingredientId !== action.payload);\n            state.totalPrice -= action.payload.price;\n        },\n        sortIngredients: (state, action) => {\n            const {indexFrom, indexTo, ingredient} = action.payload;\n            state.constructorIngredient.splice(indexFrom, 1);\n            state.constructorIngredient.splice(indexTo, 0, ingredient);\n        }\n    }\n})\n\nexport default constructorSlice.reducer;\nexport const {addIngredient, removeIngredient, sortIngredients} = constructorSlice.actions;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,EAAE,IAAIC,MAAM,QAAO,MAAM;AAEjC,MAAMC,YAAY,GAAG;EACjBC,qBAAqB,EAAE,EAAE;EACzBC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,gBAAgB,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,YAAY;EAClBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,aAAa,EAAE;MACXC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;QACxB,IAAIA,MAAM,CAACC,OAAO,CAACC,IAAI,KAAK,KAAK,IAAIH,KAAK,CAACP,qBAAqB,CAACW,GAAG,CAAEC,UAAU,IAAKA,UAAU,CAACF,IAAI,KAAK,KAAK,CAAC,EAAE;UAC7GH,KAAK,CAACP,qBAAqB,GAAGO,KAAK,CAACP,qBAAqB,CAACa,MAAM,CAAED,UAAU,IAAKA,UAAU,CAACF,IAAI,KAAK,KAAK,CAAC;QAC/G;QACAH,KAAK,CAACP,qBAAqB,CAACc,IAAI,CAACN,MAAM,CAACC,OAAO,CAAC;QAChDF,KAAK,CAACN,UAAU,IAAIO,MAAM,CAACC,OAAO,CAACM,KAAK;MAC5C,CAAC;MACDC,OAAO,EAAGP,OAAO,IAAK;QAClB,OAAO;UACHA,OAAO,EAAE;YACL,GAAGA,OAAO;YACVQ,YAAY,EAAEnB,MAAM;UACxB;QACJ,CAAC;MACL;IACJ,CAAC;IACDoB,gBAAgB,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACP,qBAAqB,GAAGO,KAAK,CAACP,qBAAqB,CAACa,MAAM,CAAED,UAAU,IAAKA,UAAU,CAACK,YAAY,KAAKT,MAAM,CAACC,OAAO,CAAC;MAC5HF,KAAK,CAACN,UAAU,IAAIO,MAAM,CAACC,OAAO,CAACM,KAAK;IAC5C,CAAC;IACDI,eAAe,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAM;QAACY,SAAS;QAAEC,OAAO;QAAET;MAAU,CAAC,GAAGJ,MAAM,CAACC,OAAO;MACvDF,KAAK,CAACP,qBAAqB,CAACsB,MAAM,CAACF,SAAS,EAAE,CAAC,CAAC;MAChDb,KAAK,CAACP,qBAAqB,CAACsB,MAAM,CAACD,OAAO,EAAE,CAAC,EAAET,UAAU,CAAC;IAC9D;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeV,gBAAgB,CAACI,OAAO;AACvC,OAAO,MAAM;EAACD,aAAa;EAAEa,gBAAgB;EAAEC;AAAe,CAAC,GAAGjB,gBAAgB,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}