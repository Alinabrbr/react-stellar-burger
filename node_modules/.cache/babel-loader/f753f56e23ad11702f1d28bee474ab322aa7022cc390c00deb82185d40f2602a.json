{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  constructorIngredient: []\n};\nconst constructorSlice = createSlice({\n  name: 'ingredient',\n  initialState,\n  reducers: {\n    addIngredient: (state, action) => {\n      if (action.payload.type === 'bun' && state.constructorIngredient.map(ingredient => ingredient.includes(ingredient.type === \"bun\"))) {\n        removeIngredient() && state.constructorIngredient.push(action.payload);\n      }\n      state.constructorIngredient.push(action.payload);\n    },\n    removeIngredient: (state, action) => {\n      state.constructorIngredient = state.constructorIngredient.filter(ingredient => ingredient._id !== action.payload);\n    }\n  }\n});\nexport default constructorSlice.reducer;\nexport const {\n  addIngredient,\n  removeIngredient\n} = constructorSlice.actions;","map":{"version":3,"names":["createSlice","initialState","constructorIngredient","constructorSlice","name","reducers","addIngredient","state","action","payload","type","map","ingredient","includes","removeIngredient","push","filter","_id","reducer","actions"],"sources":["/Users/alina/practicum/stellar-burgers/src/services/constructorSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    constructorIngredient: []\n};\n\nconst constructorSlice = createSlice({\n    name: 'ingredient',\n    initialState,\n    reducers: {\n        addIngredient: (state,action) => {\n            if (action.payload.type === 'bun' && state.constructorIngredient.map((ingredient) => ingredient.includes(ingredient.type === \"bun\"))) {\n                removeIngredient() && state.constructorIngredient.push(action.payload);\n            }\n            state.constructorIngredient.push(action.payload);\n        },\n        removeIngredient: (state,action) => {\n            state.constructorIngredient = state.constructorIngredient.filter((ingredient) => ingredient._id !== action.payload);\n        },\n    }\n})\n\nexport default constructorSlice.reducer;\nexport const {addIngredient, removeIngredient} = constructorSlice.actions;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACjBC,qBAAqB,EAAE;AAC3B,CAAC;AAED,MAAMC,gBAAgB,GAAGH,WAAW,CAAC;EACjCI,IAAI,EAAE,YAAY;EAClBH,YAAY;EACZI,QAAQ,EAAE;IACNC,aAAa,EAAEA,CAACC,KAAK,EAACC,MAAM,KAAK;MAC7B,IAAIA,MAAM,CAACC,OAAO,CAACC,IAAI,KAAK,KAAK,IAAIH,KAAK,CAACL,qBAAqB,CAACS,GAAG,CAAEC,UAAU,IAAKA,UAAU,CAACC,QAAQ,CAACD,UAAU,CAACF,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;QAClII,gBAAgB,EAAE,IAAIP,KAAK,CAACL,qBAAqB,CAACa,IAAI,CAACP,MAAM,CAACC,OAAO,CAAC;MAC1E;MACAF,KAAK,CAACL,qBAAqB,CAACa,IAAI,CAACP,MAAM,CAACC,OAAO,CAAC;IACpD,CAAC;IACDK,gBAAgB,EAAEA,CAACP,KAAK,EAACC,MAAM,KAAK;MAChCD,KAAK,CAACL,qBAAqB,GAAGK,KAAK,CAACL,qBAAqB,CAACc,MAAM,CAAEJ,UAAU,IAAKA,UAAU,CAACK,GAAG,KAAKT,MAAM,CAACC,OAAO,CAAC;IACvH;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeN,gBAAgB,CAACe,OAAO;AACvC,OAAO,MAAM;EAACZ,aAAa;EAAEQ;AAAgB,CAAC,GAAGX,gBAAgB,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}