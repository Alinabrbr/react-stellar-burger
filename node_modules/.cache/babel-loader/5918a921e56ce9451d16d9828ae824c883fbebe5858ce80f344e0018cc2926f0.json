{"ast":null,"code":"var _jsxFileName = \"/Users/alina/practicum/stellar-burgers/src/components/Section-burger-ingredients/Section-burger-ingredients.jsx\",\n  _s = $RefreshSig$();\nimport clsx from \"clsx\";\nimport styles from \"../Section-burger-ingredients/Section-burger-ingredients.module.css\";\nimport Container from \"../Container/Container\";\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Card from \"../Card/Card\";\nimport Modal from \"../Modal/Modal\";\nimport IngredientDetails from \"../Ingredient-details/Ingredient-details\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport default function SectionBurgerIngredients() {\n  _s();\n  const API = 'https://norma.nomoreparties.space/api/ingredients';\n  const [cards, setCards] = useState([]);\n  const getCard = () => {\n    fetch(API).then(res => res.json()).then(data => setCards(data.data)).catch(err => {\n      console.log(err);\n    });\n  };\n  useEffect(() => {\n    getCard();\n  }, []);\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: clsx(styles.burgerIngredients, 'mr-10'),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text text_type_main-large mt-10\",\n      children: \"\\u0421\\u043E\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0443\\u0440\\u0433\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(styles.tabs, 'mt-5 mb-10'),\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Tab, {\n          children: \"\\u0411\\u0443\\u043B\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Tab, {\n          children: \"\\u0421\\u043E\\u0443\\u0441\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Tab, {\n          children: \"\\u041D\\u0430\\u0447\\u0438\\u043D\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text text_type_main-medium\",\n        children: \"\\u0411\\u0443\\u043B\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: clsx(styles.cards, 'mt-6 ml-4'),\n        children: cards.map(card => card.type === \"bun\" && /*#__PURE__*/_createElement(Card, {\n          openModal: openModal,\n          ...card,\n          key: card._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 48\n          }\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text text_type_main-medium mt-10\",\n        children: \"\\u0421\\u043E\\u0443\\u0441\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: clsx(styles.cards, 'mt-6 ml-4'),\n        children: cards.map(card => card.type === \"sauce\" && /*#__PURE__*/_createElement(Card, {\n          openModal: openModal,\n          priceSize: \"default\",\n          ...card,\n          key: card._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text text_type_main-medium mt-10\",\n        children: \"\\u041D\\u0430\\u0447\\u0438\\u043D\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: clsx(styles.cards, 'mt-6 ml-4'),\n        children: cards.map(card => card.type === \"main\" && /*#__PURE__*/_createElement(Card, {\n          openModal: openModal,\n          priceSize: \"default\",\n          ...card,\n          key: card._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      closeModal: closeModal,\n      children: /*#__PURE__*/_jsxDEV(IngredientDetails, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(SectionBurgerIngredients, \"r4Ua2uzINluoj1QWpAYi5xhFiRs=\");\n_c = SectionBurgerIngredients;\nvar _c;\n$RefreshReg$(_c, \"SectionBurgerIngredients\");","map":{"version":3,"names":["clsx","styles","Container","Tab","Card","Modal","IngredientDetails","React","useEffect","useState","jsxDEV","_jsxDEV","createElement","_createElement","SectionBurgerIngredients","_s","API","cards","setCards","getCard","fetch","then","res","json","data","catch","err","console","log","isModalOpen","setIsModalOpen","openModal","closeModal","className","burgerIngredients","children","fileName","_jsxFileName","lineNumber","columnNumber","tabs","cardsContainer","map","card","type","key","_id","__self","__source","priceSize","_c","$RefreshReg$"],"sources":["/Users/alina/practicum/stellar-burgers/src/components/Section-burger-ingredients/Section-burger-ingredients.jsx"],"sourcesContent":["import clsx from \"clsx\";\nimport styles from \"../Section-burger-ingredients/Section-burger-ingredients.module.css\";\nimport Container from \"../Container/Container\";\nimport {Tab} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Card from \"../Card/Card\";\nimport Modal from \"../Modal/Modal\";\nimport IngredientDetails from \"../Ingredient-details/Ingredient-details\";\nimport React, {useEffect, useState} from \"react\";\n\nexport default function SectionBurgerIngredients (){\n\n    const API = 'https://norma.nomoreparties.space/api/ingredients';\n    const [cards, setCards] = useState([]);\n    const getCard = () => {\n        fetch(API)\n            .then((res) => res.json())\n            .then((data) => setCards(data.data))\n            .catch((err) => {console.log(err)});\n    }\n\n    useEffect(() => {\n        getCard();\n    }, []);\n\n    const [isModalOpen, setIsModalOpen] = useState(true);\n\n    const openModal = () => {\n        setIsModalOpen(true);\n    }\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n    }\n\n    return (\n        <section className={clsx(styles.burgerIngredients, 'mr-10')}>\n            <h1 className='text text_type_main-large mt-10'>Соберите\n                бургер</h1>\n            <div className={clsx(styles.tabs, 'mt-5 mb-10')}>\n                <Container>\n                    <Tab>Булки</Tab>\n                </Container>\n                <Container>\n                    <Tab>Соусы</Tab>\n                </Container>\n                <Container>\n                    <Tab>Начинки</Tab>\n                </Container>\n            </div>\n            <div className={styles.cardsContainer}>\n                <h2 className='text text_type_main-medium'>Булки</h2>\n                <ul className={clsx(styles.cards, 'mt-6 ml-4')}>\n                    {cards.map((card) => (\n                        card.type === \"bun\" && <Card openModal={openModal} {...card} key={card._id}/>\n                    ))}\n                </ul>\n\n                <h2 className='text text_type_main-medium mt-10'>Соусы</h2>\n                <ul className={clsx(styles.cards, 'mt-6 ml-4')}>\n                    {cards.map((card) => (\n                        card.type === \"sauce\" &&\n                        <Card openModal={openModal} priceSize={\"default\"} {...card} key={card._id}/>\n                    ))}\n                </ul>\n                <h2 className='text text_type_main-medium mt-10'>Начинки</h2>\n                <ul className={clsx(styles.cards, 'mt-6 ml-4')}>\n                    {cards.map((card) => (\n                        card.type === \"main\" &&\n                        <Card openModal={openModal} priceSize={\"default\"} {...card} key={card._id}/>\n                    ))}\n                </ul>\n            </div>\n            {isModalOpen && <Modal closeModal={closeModal}><IngredientDetails/></Modal>}\n        </section>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}